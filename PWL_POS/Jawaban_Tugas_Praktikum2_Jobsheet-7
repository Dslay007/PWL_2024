Pada praktikum ini, kita akan menerapkan sistem otorisasi untuk mengelola akses 
pengguna sesuai levelnya. Hanya pengguna dengan peran administrator yang diizinkan 
mengakses menu level_user, sementara pengguna lain akan otomatis ditolak. 
Tujuannya untuk menjaga keamanan dan memastikan hanya pihak berwenang yang dapat 
mengubah atau melihat informasi penting.

Berikut tahapan yang dilakukan:

    UserModel.php
        getRoleName(): Mengembalikan nama peran pengguna.
        hasRole($role): Memeriksa apakah pengguna memiliki peran tertentu berdasarkan level_kode.

    Kernel.php
        'authorize' => \App\Http\Middleware\AuthorizeUser::class: Membuat alias untuk middleware AuthorizeUser guna memeriksa izin akses pengguna.

    AuthorizeUser.php
        handle(Request $request, Closure $next, $role = ''): Mengecek apakah pengguna memiliki peran yang sesuai, jika tidak akses akan ditolak dengan pesan 403.

    route/web.php
        Route::middleware(['authorize:ADM'])->group(...): Mengelompokkan rute untuk akses pengguna dengan peran 'ADM' (Administrator).